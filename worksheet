<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Weekly Job Calendar</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);
            color: #333;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 20px 0;
            color: white;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        
        .logo-container {
            margin-bottom: 15px;
        }
        
        .logo {
            max-height: 60px;
            width: auto;
        }
        
        header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        header p {
            font-size: 1.1rem;
            max-width: 700px;
            margin: 0 auto;
            opacity: 0.9;
        }
        
        .earnings-summary {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            padding: 15px 25px;
            margin: 20px auto;
            max-width: 600px;
            text-align: center;
            color: white;
            backdrop-filter: blur(5px);
        }
        
        .earnings-title {
            font-size: 1.2rem;
            margin-bottom: 10px;
            font-weight: 600;
        }
        
        .earnings-amount {
            font-size: 2rem;
            font-weight: 700;
            color: #ffd700;
        }
        
        .week-navigation {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0;
            gap: 20px;
        }
        
        .nav-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 30px;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .nav-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }
        
        .current-week {
            color: white;
            font-size: 1.2rem;
            font-weight: 600;
            background: rgba(0, 0, 0, 0.2);
            padding: 10px 25px;
            border-radius: 30px;
        }
        
        .app-container {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            margin-top: 20px;
        }
        
        .form-section {
            flex: 1;
            min-width: 300px;
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            max-height: calc(100vh - 150px);
            overflow-y: auto;
        }
        
        .calendar-section {
            flex: 2;
            min-width: 300px;
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        
        .section-title {
            font-size: 1.6rem;
            margin-bottom: 20px;
            color: #1a2a6c;
            padding-bottom: 15px;
            border-bottom: 2px solid #eee;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #444;
        }
        
        .optional-label::after {
            content: " (optional)";
            font-weight: normal;
            color: #888;
        }
        
        input, textarea, select {
            width: 100%;
            padding: 14px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }
        
        input:focus, textarea:focus, select:focus {
            border-color: #1a2a6c;
            outline: none;
            box-shadow: 0 0 0 3px rgba(26, 42, 108, 0.2);
        }
        
        textarea {
            min-height: 100px;
            resize: vertical;
        }
        
        .btn {
            background: #1a2a6c;
            color: white;
            border: none;
            padding: 14px 25px;
            font-size: 1.1rem;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            width: 100%;
        }
        
        .btn:hover {
            background: #0d1a4d;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .btn i {
            font-size: 1.2rem;
        }
        
        .calendar-header {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            text-align: center;
            font-weight: bold;
            margin-bottom: 15px;
            color: #1a2a6c;
        }
        
        .calendar-day {
            padding: 15px 5px;
            border-bottom: 2px solid #eee;
        }
        
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
        }
        
        .day-column {
            min-height: 600px;
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px 10px;
            position: relative;
        }
        
        .day-header {
            text-align: center;
            padding: 10px;
            margin-bottom: 15px;
            font-weight: 600;
            border-radius: 8px;
            background: rgba(26, 42, 108, 0.1);
        }
        
        .sunday {
            background: rgba(178, 31, 31, 0.1);
        }
        
        .job-card {
            background: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 3px 8px rgba(0,0,0,0.1);
            border-left: 4px solid #1a2a6c;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .job-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.15);
        }
        
        .job-card.steve {
            border-left-color: #28a745;
        }
        
        .job-card.darren {
            border-left-color: #ffc107;
        }
        
        .job-time {
            font-size: 0.85rem;
            color: #666;
            margin-bottom: 5px;
        }
        
        .job-title {
            font-weight: 600;
            margin-bottom: 8px;
            color: #1a2a6c;
        }
        
        .job-customer {
            font-size: 0.95rem;
            margin-bottom: 8px;
            color: #555;
        }
        
        .job-price {
            font-weight: 600;
            color: #28a745;
            font-size: 1.1rem;
        }
        
        .no-jobs {
            text-align: center;
            padding: 30px 10px;
            color: #777;
            font-style: italic;
        }
        
        .job-actions {
            display: flex;
            gap: 8px;
            margin-top: 10px;
            flex-wrap: wrap;
        }
        
        .action-btn {
            padding: 6px 12px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            font-size: 0.85rem;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: all 0.2s;
        }
        
        .print-btn {
            background: #28a745;
            color: white;
        }
        
        .edit-btn {
            background: #ffc107;
            color: #333;
        }
        
        .delete-btn {
            background: #dc3545;
            color: white;
        }
        
        .paid-btn {
            background: #17a2b8;
            color: white;
        }
        
        .unpaid-btn {
            background: #6c757d;
            color: white;
        }
        
        .action-btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        
        /* Professional Invoice/Receipt Styles */
        .receipt {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            max-width: 750px;
            margin: 20px auto;
            display: none;
            font-size: 13px;
        }
        
        .invoice-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 25px;
            border-bottom: 2px solid #333;
            padding-bottom: 15px;
        }
        
        .company-info {
            width: 45%;
        }
        
        .company-logo {
            max-height: 45px;
            width: auto;
            margin-bottom: 12px;
        }
        
        .company-name {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .company-address {
            font-size: 0.85rem;
            line-height: 1.4;
            color: #555;
        }
        
        .invoice-details {
            text-align: right;
            width: 45%;
        }
        
        .invoice-title {
            font-size: 1.6rem;
            font-weight: bold;
            color: #1a2a6c;
            margin-bottom: 8px;
        }
        
        .invoice-meta {
            font-size: 0.9rem;
        }
        
        .invoice-meta div {
            margin-bottom: 6px;
        }
        
        .invoice-meta .label {
            font-weight: bold;
            display: inline-block;
            width: 80px;
        }
        
        .customer-info {
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .customer-name {
            font-size: 1.1rem;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .customer-address {
            font-size: 1rem;
            line-height: 1.5;
            color: #555;
        }
        
        .items-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 25px;
            table-layout: fixed;
        }
        
        .items-table th {
            background: #f8f9fa;
            text-align: left;
            padding: 10px 12px;
            border-bottom: 2px solid #333;
            font-weight: bold;
            font-size: 0.9rem;
        }
        
        .items-table th.description {
            width: 50%;
        }
        
        .items-table th.quantity {
            width: 15%;
            text-align: center;
        }
        
        .items-table th.unit-price {
            width: 20%;
            text-align: right;
        }
        
        .items-table th.amount {
            width: 15%;
            text-align: right;
        }
        
        .items-table td {
            padding: 10px 12px;
            border-bottom: 1px solid #eee;
            font-size: 0.9rem;
        }
        
        .items-table td.description {
            width: 50%;
        }
        
        .items-table td.quantity {
            width: 15%;
            text-align: center;
        }
        
        .items-table td.unit-price {
            width: 20%;
            text-align: right;
        }
        
        .items-table td.amount {
            width: 15%;
            text-align: right;
        }
        
        .items-table tr:last-child td {
            border-bottom: none;
        }
        
        .text-right {
            text-align: right;
        }
        
        .text-center {
            text-align: center;
        }
        
        .totals-table {
            width: 40%;
            margin-left: auto;
            border-collapse: collapse;
        }
        
        .totals-table td {
            padding: 6px 12px;
            font-size: 0.9rem;
        }
        
        .totals-table tr:first-child td {
            border-top: 1px solid #eee;
        }
        
        .totals-table .total-row td {
            font-weight: bold;
            border-top: 2px solid #333;
            border-bottom: 2px solid #333;
        }
        
        .payment-info {
            margin-top: 25px;
            padding-top: 15px;
            border-top: 1px solid #eee;
            font-size: 0.85rem;
            color: #555;
        }
        
        .page-number {
            text-align: center;
            margin-top: 25px;
            padding-top: 15px;
            border-top: 1px solid #eee;
            font-size: 0.85rem;
            color: #777;
        }
        
        .print-buttons {
            text-align: center;
            margin-top: 25px;
        }
        
        .btn-print {
            background: #28a745;
            margin-right: 10px;
            padding: 12px 20px;
        }
        
        .btn-close {
            background: #6c757d;
            padding: 12px 20px;
        }
        
        .btn-paid {
            background: #17a2b8;
            padding: 12px 20px;
            margin-right: 10px;
        }
        
        .btn-unpaid {
            background: #6c757d;
            padding: 12px 20px;
            margin-right: 10px;
        }
        
        .paid-status {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: bold;
            margin-left: 10px;
        }
        
        .paid {
            background: #d4edda;
            color: #155724;
        }
        
        .unpaid {
            background: #f8d7da;
            color: #721c24;
        }
        
        /* Additional Items Form */
        .additional-items-form {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-top: 20px;
        }
        
        .additional-items-title {
            font-size: 1.1rem;
            margin-bottom: 15px;
            color: #1a2a6c;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .item-row {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
            align-items: center;
        }
        
        .item-row input {
            flex: 1;
            padding: 8px;
            font-size: 0.9rem;
        }
        
        .item-row .quantity {
            width: 80px;
        }
        
        .item-row .unit-price {
            width: 100px;
        }
        
        .remove-item {
            background: #dc3545;
            color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .add-item-btn {
            background: #17a2b8;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            margin-top: 10px;
        }
        
        footer {
            text-align: center;
            color: white;
            padding: 30px 0;
            margin-top: 30px;
            opacity: 0.8;
        }
        
        /* A4 Print Styles */
        @media print {
            @page {
                size: A4;
                margin: 15mm;
            }
            
            body {
                background: white;
                padding: 0;
                margin: 0;
            }
            
            .container {
                max-width: 100%;
                padding: 0;
                margin: 0;
            }
            
            header, .week-navigation, .app-container, footer, .print-buttons, .earnings-summary {
                display: none !important;
            }
            
            .receipt {
                display: block !important;
                box-shadow: none;
                max-width: 100%;
                width: 100%;
                height: 100%;
                padding: 15mm;
                margin: 0;
                font-size: 12pt;
            }
            
            .btn-print, .btn-close, .btn-paid, .btn-unpaid, .add-item-btn, .remove-item {
                display: none !important;
            }
            
            .additional-items-form {
                display: none !important;
            }
            
            /* Ensure proper sizing for print */
            .invoice-header, .customer-info, .items-table, .totals-table {
                width: 100% !important;
            }
            
            .items-table th, .items-table td {
                padding: 8px 10px !important;
            }
            
            .totals-table td {
                padding: 5px 10px !important;
            }
        }
        
        /* Mobile-specific optimizations */
        @media (max-width: 1100px) {
            .app-container {
                flex-direction: column;
            }
            
            .calendar-grid {
                grid-template-columns: repeat(3, 1fr);
            }
            
            .calendar-header {
                display: none;
            }
        }
        
        @media (max-width: 768px) {
            .calendar-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            header h1 {
                font-size: 2rem;
            }
            
            body {
                padding: 15px;
            }
            
            .week-navigation {
                flex-wrap: wrap;
            }
            
            .current-week {
                width: 100%;
                margin: 10px 0;
                text-align: center;
            }
        }
        
        /* Samsung Galaxy A21s specific optimization (720x1600) */
        @media (max-width: 720px) and (max-height: 1600px) {
            body {
                padding: 10px;
                font-size: 14px;
            }
            
            header {
                padding: 15px 0;
            }
            
            .logo {
                max-height: 40px;
            }
            
            header h1 {
                font-size: 1.5rem;
            }
            
            header p {
                font-size: 0.9rem;
            }
            
            .week-navigation {
                gap: 10px;
                margin: 15px 0;
            }
            
            .nav-btn {
                padding: 8px 15px;
                font-size: 0.9rem;
                border-radius: 20px;
            }
            
            .current-week {
                font-size: 0.9rem;
                padding: 8px 15px;
            }
            
            .app-container {
                gap: 20px;
                margin-top: 15px;
            }
            
            .form-section, .calendar-section {
                padding: 20px;
                border-radius: 12px;
            }
            
            .section-title {
                font-size: 1.3rem;
                margin-bottom: 15px;
            }
            
            .form-group {
                margin-bottom: 15px;
            }
            
            label {
                font-size: 0.9rem;
                margin-bottom: 6px;
            }
            
            input, textarea, select {
                padding: 12px;
                font-size: 0.95rem;
            }
            
            textarea {
                min-height: 80px;
            }
            
            .btn {
                padding: 12px 20px;
                font-size: 1rem;
            }
            
            .calendar-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .day-column {
                padding: 12px 10px;
            }
            
            .day-header {
                padding: 8px;
                font-size: 1rem;
            }
            
            .job-card {
                padding: 12px;
                margin-bottom: 12px;
            }
            
            .job-time {
                font-size: 0.8rem;
            }
            
            .job-title {
                font-size: 1rem;
            }
            
            .job-customer {
                font-size: 0.85rem;
            }
            
            .job-price {
                font-size: 1rem;
            }
            
            .job-actions {
                gap: 6px;
                margin-top: 8px;
            }
            
            .action-btn {
                padding: 5px 10px;
                font-size: 0.8rem;
            }
            
            .receipt {
                padding: 20px;
                font-size: 11px;
                max-width: 100%;
            }
            
            .invoice-header {
                flex-direction: column;
                gap: 20px;
            }
            
            .company-info, .invoice-details {
                width: 100%;
                text-align: left;
            }
            
            .invoice-details {
                text-align: left;
            }
            
            .items-table {
                font-size: 10px;
            }
            
            .items-table th, .items-table td {
                padding: 6px 8px;
            }
            
            .totals-table {
                width: 100%;
            }
            
            .page-number {
                font-size: 0.8rem;
            }
            
            footer {
                font-size: 0.8rem;
                padding: 20px 0;
            }
        }
        
        /* Prevent zoom on iOS when focusing inputs */
        @media (max-width: 720px) {
            input, textarea, select {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo-container">
                <img src="https://acaciatv.netlify.app/assets/images/logo.svg" alt="Company Logo" class="logo">
            </div>
            <h1><i class="fas fa-calendar-alt"></i> Weekly Job Calendar</h1>
            <p>Manage job bookings with a weekly calendar view (Monday to Saturday)</p>
        </header>
        
        <div class="earnings-summary">
            <div class="earnings-title">This Week's Paid Earnings</div>
            <div class="earnings-amount" id="weeklyEarnings">£0.00</div>
        </div>
        
        <div class="week-navigation">
            <button class="nav-btn" id="prevWeek"><i class="fas fa-chevron-left"></i> Previous Week</button>
            <div class="current-week" id="currentWeekDisplay">Oct 23 - Oct 28, 2023</div>
            <button class="nav-btn" id="nextWeek">Next Week <i class="fas fa-chevron-right"></i></button>
        </div>
        
        <div class="app-container">
            <section class="form-section">
                <h2 class="section-title">New Job Booking</h2>
                <form id="bookingForm">
                    <div class="form-group">
                        <label for="customerName">Customer Name *</label>
                        <input type="text" id="customerName" placeholder="Full name" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="customerAddress" class="optional-label">Address</label>
                        <textarea id="customerAddress" placeholder="Full address"></textarea>
                    </div>
                    
                    <div class="form-row" style="display: flex; gap: 15px;">
                        <div class="form-group" style="flex: 1;">
                            <label for="doorNumber" class="optional-label">Door Number</label>
                            <input type="text" id="doorNumber" placeholder="e.g. 123">
                        </div>
                        
                        <div class="form-group" style="flex: 1;">
                            <label for="postcode" class="optional-label">Postcode</label>
                            <input type="text" id="postcode" placeholder="e.g. SW1A 1AA">
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="phoneNumber" class="optional-label">Phone Number</label>
                        <input type="tel" id="phoneNumber" placeholder="e.g. 07123 456789">
                    </div>
                    
                    <div class="form-group">
                        <label for="reasonForCallout" class="optional-label">Reason for Callout</label>
                        <textarea id="reasonForCallout" placeholder="Describe the issue..."></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="jobDate">Job Date *</label>
                        <input type="date" id="jobDate" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="jobTime">Job Time *</label>
                        <input type="time" id="jobTime" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="assignedTo">Assigned To *</label>
                        <select id="assignedTo" required>
                            <option value="">Select technician</option>
                            <option value="Steve">Steve</option>
                            <option value="Darren">Darren</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="jobPrice" class="optional-label">Price (£)</label>
                        <input type="number" id="jobPrice" placeholder="e.g. 85.00" min="0" step="0.01" value="30.00">
                    </div>
                    
                    <button type="submit" class="btn"><i class="fas fa-plus-circle"></i> Book Job</button>
                </form>
            </section>
            
            <section class="calendar-section">
                <h2 class="section-title">Weekly Schedule</h2>
                <div class="calendar-header">
                    <div class="calendar-day">Monday</div>
                    <div class="calendar-day">Tuesday</div>
                    <div class="calendar-day">Wednesday</div>
                    <div class="calendar-day">Thursday</div>
                    <div class="calendar-day">Friday</div>
                    <div class="calendar-day">Saturday</div>
                    <div class="calendar-day">Sunday</div>
                </div>
                
                <div class="calendar-grid" id="calendarGrid">
                    <!-- Calendar days will be populated by JavaScript -->
                </div>
            </section>
        </div>
        
        <div class="receipt" id="receipt">
            <div class="invoice-header">
                <div class="company-info">
                    <img src="https://acaciatv.netlify.app/assets/images/logo.svg" alt="Company Logo" class="company-logo">
                    <div class="company-name">Acacia TV</div>
                    <div class="company-address">
                        Filer Road<br>
                        Halfway<br>
                        Sheerness<br>
                        Kent<br>
                        ME12 3AL<br>
                        United Kingdom<br>
                        01795873160<br>
                        <a href="mailto:acaciatv@hotmail.co.uk" style="color: #1a2a6c;">acaciatv@hotmail.co.uk</a><br>
                        <a href="https://acaciatv.netlify.app" style="color: #1a2a6c;">https://acaciatv.netlify.app</a>
                    </div>
                </div>
                
                <div class="invoice-details">
                    <div class="invoice-title">INVOICE</div>
                    <div class="invoice-meta">
                        <div><span class="label">Invoice:</span> <span id="receiptInvoiceNumber">1001</span></div>
                        <div><span class="label">Date:</span> <span id="receiptDate">26/03/2025</span></div>
                        <div><span class="label">Due Date:</span> <span id="receiptDueDate">26/03/2025</span></div>
                    </div>
                </div>
            </div>
            
            <div class="customer-info">
                <div class="customer-name" id="receiptCustomer">Mrs Short</div>
                <div class="customer-address" id="receiptCustomerAddress">
                    110 Nelson Avenue<br>
                    Minster on Sea<br>
                    Sheerness
                </div>
            </div>
            
            <table class="items-table">
                <thead>
                    <tr>
                        <th class="description">Description</th>
                        <th class="quantity">Quantity</th>
                        <th class="unit-price">Unit Price</th>
                        <th class="amount">Amount</th>
                    </tr>
                </thead>
                <tbody id="receiptItems">
                    <tr>
                        <td class="description" id="receiptDescription">Call out charge</td>
                        <td class="quantity text-center">1.00</td>
                        <td class="unit-price text-right" id="receiptUnitPrice">£30.00</td>
                        <td class="amount text-right" id="receiptAmount">£30.00</td>
                    </tr>
                </tbody>
            </table>
            
            <table class="totals-table">
                <tr class="total-row">
                    <td><strong>Total</strong></td>
                    <td class="text-right" id="receiptTotal"><strong>£30.00</strong></td>
                </tr>
                <tr>
                    <td>Paid on <span id="receiptPaymentDate">26/03/2025</span></td>
                    <td class="text-right" id="receiptPaymentAmount">£30.00</td>
                </tr>
                <tr class="total-row">
                    <td><strong>Amount Due</strong></td>
                    <td class="text-right" id="receiptAmountDue"><strong>£0.00</strong></td>
                </tr>
            </table>
            
            <div class="payment-info">
                Payment Communication: <span id="receiptPaymentRef">1001</span>
            </div>
            
            <div class="page-number">Page 1/1</div>
            
            <div class="additional-items-form">
                <div class="additional-items-title">
                    <i class="fas fa-plus-circle"></i> Add Additional Items
                </div>
                <div id="additionalItemsContainer">
                    <!-- Additional items will be added here -->
                </div>
                <button class="add-item-btn" id="addItemBtn">
                    <i class="fas fa-plus"></i> Add Item
                </button>
            </div>
            
            <div class="print-buttons">
                <button class="btn btn-paid" id="markAsPaidBtn"><i class="fas fa-check-circle"></i> Mark as Paid</button>
                <button class="btn btn-unpaid" id="markAsUnpaidBtn"><i class="fas fa-times-circle"></i> Mark as Unpaid</button>
                <button class="btn btn-print" onclick="window.print()"><i class="fas fa-print"></i> Print Invoice</button>
                <button class="btn btn-close" onclick="closeReceipt()"><i class="fas fa-times"></i> Close</button>
            </div>
        </div>
        
        <footer>
            <p>Weekly Job Calendar &copy; 2025 | All bookings are securely stored</p>
        </footer>
    </div>

    <script>
        // Sample job data with invoice numbers
        let jobs = [
            {
                id: 1,
                invoiceNumber: 1001,
                customerName: "Mrs Short",
                address: "110 Nelson Avenue, Minster on Sea, Sheerness",
                doorNumber: "110",
                postcode: "ME12 3AL",
                phoneNumber: "01795 123456",
                reason: "Call out charge",
                date: "2025-03-26",
                time: "09:00",
                assignedTo: "Steve",
                price: 30.00,
                paid: false,
                additionalItems: []
            },
            {
                id: 2,
                invoiceNumber: 1002,
                customerName: "John Smith",
                address: "456 Park Avenue, Manchester",
                doorNumber: "456",
                postcode: "M1 2AB",
                phoneNumber: "07987 654321",
                reason: "Leaking pipe under sink",
                date: "2023-10-24",
                time: "14:00",
                assignedTo: "Darren",
                price: 65.50,
                paid: true,
                additionalItems: []
            },
            {
                id: 3,
                invoiceNumber: 1003,
                customerName: "Michael Brown",
                address: "789 Oak Road, Birmingham",
                doorNumber: "789",
                postcode: "B1 3CD",
                phoneNumber: "07555 123456",
                reason: "Electrical fault in kitchen",
                date: "2023-10-25",
                time: "11:15",
                assignedTo: "Steve",
                price: 120.00,
                paid: false,
                additionalItems: []
            }
        ];
        
        // Next invoice number
        let nextInvoiceNumber = 1004;
        
        // Current job being viewed in receipt
        let currentJobId = null;
        
        // DOM Elements
        const bookingForm = document.getElementById('bookingForm');
        const calendarGrid = document.getElementById('calendarGrid');
        const prevWeekBtn = document.getElementById('prevWeek');
        const nextWeekBtn = document.getElementById('nextWeek');
        const currentWeekDisplay = document.getElementById('currentWeekDisplay');
        const receipt = document.getElementById('receipt');
        const weeklyEarningsElement = document.getElementById('weeklyEarnings');
        const markAsPaidBtn = document.getElementById('markAsPaidBtn');
        const markAsUnpaidBtn = document.getElementById('markAsUnpaidBtn');
        const addItemBtn = document.getElementById('addItemBtn');
        const additionalItemsContainer = document.getElementById('additionalItemsContainer');
        
        // Current week tracking
        let currentWeekStart = new Date();
        currentWeekStart.setDate(currentWeekStart.getDate() - currentWeekStart.getDay() + 1); // Start on Monday
        
        // Initialize the app
        document.addEventListener('DOMContentLoaded', () => {
            setDefaultDate();
            renderCalendar();
            updateWeeklyEarnings();
        });
        
        // Set today as default date
        function setDefaultDate() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('jobDate').value = today;
            
            // Set default time to 9:00 AM
            document.getElementById('jobTime').value = '09:00';
        }
        
        // Calculate weekly earnings (only paid jobs)
        function calculateWeeklyEarnings() {
            let total = 0;
            const weekEnd = new Date(currentWeekStart);
            weekEnd.setDate(weekEnd.getDate() + 6); // End of week (Sunday)
            
            jobs.forEach(job => {
                const jobDate = new Date(job.date);
                if (jobDate >= currentWeekStart && jobDate <= weekEnd && job.price && job.paid) {
                    total += job.price;
                    // Add additional items total
                    if (job.additionalItems) {
                        job.additionalItems.forEach(item => {
                            total += item.quantity * item.unitPrice;
                        });
                    }
                }
            });
            
            return total;
        }
        
        // Update weekly earnings display
        function updateWeeklyEarnings() {
            const earnings = calculateWeeklyEarnings();
            weeklyEarningsElement.textContent = `£${earnings.toFixed(2)}`;
        }
        
        // Render calendar
        function renderCalendar() {
            // Update week display
            const weekEnd = new Date(currentWeekStart);
            weekEnd.setDate(weekEnd.getDate() + 5); // Saturday
            
            const options = { month: 'short', day: 'numeric' };
            currentWeekDisplay.textContent = 
                `${currentWeekStart.toLocaleDateString('en-GB', options)} - ${weekEnd.toLocaleDateString('en-GB', options)}, ${currentWeekStart.getFullYear()}`;
            
            // Update earnings
            updateWeeklyEarnings();
            
            // Clear calendar grid
            calendarGrid.innerHTML = '';
            
            // Create columns for each day (Monday to Saturday)
            for (let i = 0; i < 6; i++) {
                const dayDate = new Date(currentWeekStart);
                dayDate.setDate(dayDate.getDate() + i);
                
                const dayColumn = document.createElement('div');
                dayColumn.className = 'day-column';
                
                const dayHeader = document.createElement('div');
                dayHeader.className = 'day-header';
                dayHeader.textContent = `${getDayName(i)}, ${dayDate.getDate()}/${dayDate.getMonth() + 1}`;
                
                dayColumn.appendChild(dayHeader);
                
                // Filter jobs for this day
                const dateString = dayDate.toISOString().split('T')[0];
                const dayJobs = jobs.filter(job => job.date === dateString);
                
                // Sort jobs by time
                dayJobs.sort((a, b) => {
                    return a.time.localeCompare(b.time);
                });
                
                if (dayJobs.length === 0) {
                    const noJobs = document.createElement('div');
                    noJobs.className = 'no-jobs';
                    noJobs.textContent = 'No jobs scheduled';
                    dayColumn.appendChild(noJobs);
                } else {
                    dayJobs.forEach(job => {
                        const jobCard = createJobCard(job);
                        dayColumn.appendChild(jobCard);
                    });
                }
                
                calendarGrid.appendChild(dayColumn);
            }
            
            // Add Sunday column (for display only)
            const sundayColumn = document.createElement('div');
            sundayColumn.className = 'day-column sunday';
            
            const sundayHeader = document.createElement('div');
            sundayHeader.className = 'day-header';
            sundayHeader.textContent = `Sunday`;
            
            sundayColumn.appendChild(sundayHeader);
            
            const sundayMessage = document.createElement('div');
            sundayMessage.className = 'no-jobs';
            sundayMessage.textContent = 'No jobs on Sundays';
            sundayColumn.appendChild(sundayMessage);
            
            calendarGrid.appendChild(sundayColumn);
        }
        
        // Create job card element
        function createJobCard(job) {
            const jobCard = document.createElement('div');
            jobCard.className = `job-card ${job.assignedTo.toLowerCase()}`;
            jobCard.dataset.id = job.id;
            
            jobCard.innerHTML = `
                <div class="job-time">${job.time}</div>
                <div class="job-title">${job.customerName}</div>
                <div class="job-customer">${job.reason ? job.reason.substring(0, 30) + (job.reason.length > 30 ? '...' : '') : 'No description'}</div>
                <div class="job-price">${job.price ? '£' + job.price.toFixed(2) : 'Price not set'}</div>
                <div class="job-actions">
                    <button class="action-btn print-btn" onclick="showReceipt(${job.id})">
                        <i class="fas fa-print"></i> Receipt
                    </button>
                    <button class="action-btn edit-btn">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                    <button class="action-btn delete-btn" onclick="deleteJob(${job.id})">
                        <i class="fas fa-trash"></i> Delete
                    </button>
                    ${job.paid ? 
                        `<button class="action-btn unpaid-btn" onclick="markAsUnpaid(${job.id})">
                            <i class="fas fa-times-circle"></i> Mark Unpaid
                        </button>
                        <span class="paid-status paid">PAID</span>` : 
                        `<button class="action-btn paid-btn" onclick="markAsPaid(${job.id})">
                            <i class="fas fa-check-circle"></i> Mark Paid
                        </button>
                        <span class="paid-status unpaid">UNPAID</span>`}
                </div>
            `;
            
            return jobCard;
        }
        
        // Get day name for index (0=Monday, 5=Saturday)
        function getDayName(index) {
            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            return days[index];
        }
        
        // Navigate to previous week
        prevWeekBtn.addEventListener('click', () => {
            currentWeekStart.setDate(currentWeekStart.getDate() - 7);
            renderCalendar();
        });
        
        // Navigate to next week
        nextWeekBtn.addEventListener('click', () => {
            currentWeekStart.setDate(currentWeekStart.getDate() + 7);
            renderCalendar();
        });
        
        // Handle form submission
        bookingForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            const newJob = {
                id: Date.now(),
                invoiceNumber: nextInvoiceNumber++,
                customerName: document.getElementById('customerName').value,
                address: document.getElementById('customerAddress').value,
                doorNumber: document.getElementById('doorNumber').value,
                postcode: document.getElementById('postcode').value.toUpperCase(),
                phoneNumber: document.getElementById('phoneNumber').value,
                reason: document.getElementById('reasonForCallout').value || "Call out charge",
                date: document.getElementById('jobDate').value,
                time: document.getElementById('jobTime').value,
                assignedTo: document.getElementById('assignedTo').value,
                price: document.getElementById('jobPrice').value ? parseFloat(document.getElementById('jobPrice').value) : 30.00,
                paid: false,
                additionalItems: []
            };
            
            jobs.push(newJob);
            
            // Sort jobs by date and time
            jobs.sort((a, b) => {
                if (a.date !== b.date) {
                    return a.date.localeCompare(b.date);
                }
                return a.time.localeCompare(b.time);
            });
            
            renderCalendar();
            
            // Reset form
            bookingForm.reset();
            setDefaultDate();
            document.getElementById('jobPrice').value = "30.00"; // Reset to default
            
            // Show success message
            alert(`Job booked successfully for ${newJob.customerName} on ${newJob.date} at ${newJob.time}!\nInvoice Number: ${newJob.invoiceNumber}`);
        });
        
        // Delete job
        function deleteJob(jobId) {
            if (confirm('Are you sure you want to delete this job?')) {
                jobs = jobs.filter(job => job.id !== jobId);
                renderCalendar();
                alert('Job deleted successfully!');
            }
        }
        
        // Mark job as paid
        function markAsPaid(jobId) {
            const job = jobs.find(job => job.id === jobId);
            if (job) {
                job.paid = true;
                renderCalendar();
                updateWeeklyEarnings();
                alert(`Job for ${job.customerName} marked as paid!`);
                
                // If we're viewing this job's receipt, update the receipt display
                if (currentJobId === jobId) {
                    showReceipt(jobId);
                }
            }
        }
        
        // Mark job as unpaid
        function markAsUnpaid(jobId) {
            const job = jobs.find(job => job.id === jobId);
            if (job) {
                job.paid = false;
                renderCalendar();
                updateWeeklyEarnings();
                alert(`Job for ${job.customerName} marked as unpaid!`);
                
                // If we're viewing this job's receipt, update the receipt display
                if (currentJobId === jobId) {
                    showReceipt(jobId);
                }
            }
        }
        
        // Add additional item row
        function addAdditionalItemRow(description = '', quantity = 1, unitPrice = 0) {
            const itemRow = document.createElement('div');
            itemRow.className = 'item-row';
            itemRow.innerHTML = `
                <input type="text" class="item-description" placeholder="Item description" value="${description}">
                <input type="number" class="quantity" placeholder="Qty" min="0" step="0.01" value="${quantity}">
                <input type="number" class="unit-price" placeholder="Price" min="0" step="0.01" value="${unitPrice.toFixed(2)}">
                <button class="remove-item" onclick="this.parentElement.remove()">
                    <i class="fas fa-times"></i>
                </button>
            `;
            additionalItemsContainer.appendChild(itemRow);
        }
        
        // Add item button event
        addItemBtn.addEventListener('click', () => {
            addAdditionalItemRow();
        });
        
        // Show receipt
        function showReceipt(jobId) {
            const job = jobs.find(j => j.id === jobId);
            if (!job) return;
            
            // Store current job ID
            currentJobId = jobId;
            
            // Format date as DD/MM/YYYY
            const formatDate = (dateString) => {
                const date = new Date(dateString);
                return `${String(date.getDate()).padStart(2, '0')}/${String(date.getMonth() + 1).padStart(2, '0')}/${date.getFullYear()}`;
            };
            
            // Update receipt fields
            document.getElementById('receiptInvoiceNumber').textContent = job.invoiceNumber;
            document.getElementById('receiptDate').textContent = formatDate(job.date);
            document.getElementById('receiptDueDate').textContent = formatDate(job.date);
            document.getElementById('receiptCustomer').textContent = job.customerName;
            document.getElementById('receiptCustomerAddress').innerHTML = job.address.replace(/,/g, '<br>');
            document.getElementById('receiptDescription').textContent = job.reason;
            document.getElementById('receiptUnitPrice').textContent = `£${job.price.toFixed(2)}`;
            document.getElementById('receiptAmount').textContent = `£${job.price.toFixed(2)}`;
            document.getElementById('receiptTotal').innerHTML = `<strong>£${job.price.toFixed(2)}</strong>`;
            document.getElementById('receiptPaymentDate').textContent = formatDate(job.date);
            document.getElementById('receiptPaymentAmount').textContent = job.paid ? `£${job.price.toFixed(2)}` : '£0.00';
            document.getElementById('receiptAmountDue').innerHTML = `<strong>£${job.paid ? '0.00' : job.price.toFixed(2)}</strong>`;
            document.getElementById('receiptPaymentRef').textContent = job.invoiceNumber;
            
            // Clear and populate additional items
            const receiptItems = document.getElementById('receiptItems');
            receiptItems.innerHTML = '';
            
            // Add main item
            const mainItemRow = document.createElement('tr');
            mainItemRow.innerHTML = `
                <td class="description">${job.reason}</td>
                <td class="quantity text-center">1.00</td>
                <td class="unit-price text-right">£${job.price.toFixed(2)}</td>
                <td class="amount text-right">£${job.price.toFixed(2)}</td>
            `;
            receiptItems.appendChild(mainItemRow);
            
            // Add additional items if any
            if (job.additionalItems && job.additionalItems.length > 0) {
                job.additionalItems.forEach(item => {
                    const itemRow = document.createElement('tr');
                    const amount = item.quantity * item.unitPrice;
                    itemRow.innerHTML = `
                        <td class="description">${item.description}</td>
                        <td class="quantity text-center">${item.quantity.toFixed(2)}</td>
                        <td class="unit-price text-right">£${item.unitPrice.toFixed(2)}</td>
                        <td class="amount text-right">£${amount.toFixed(2)}</td>
                    `;
                    receiptItems.appendChild(itemRow);
                    
                    // Update totals
                    const currentTotal = parseFloat(document.getElementById('receiptTotal').textContent.replace('£', '').replace('<strong>', '').replace('</strong>', ''));
                    const newTotal = currentTotal + amount;
                    document.getElementById('receiptTotal').innerHTML = `<strong>£${newTotal.toFixed(2)}</strong>`;
                    document.getElementById('receiptAmountDue').innerHTML = `<strong>£${job.paid ? '0.00' : newTotal.toFixed(2)}</strong>`;
                });
            }
            
            // Clear additional items form and populate with job's items
            additionalItemsContainer.innerHTML = '';
            if (job.additionalItems && job.additionalItems.length > 0) {
                job.additionalItems.forEach(item => {
                    addAdditionalItemRow(item.description, item.quantity, item.unitPrice);
                });
            }
            
            // Update mark as paid/unpaid buttons
            if (job.paid) {
                markAsPaidBtn.style.display = 'none';
                markAsUnpaidBtn.style.display = 'inline-block';
            } else {
                markAsPaidBtn.style.display = 'inline-block';
                markAsUnpaidBtn.style.display = 'none';
            }
            
            receipt.style.display = 'block';
            document.querySelector('.app-container').style.display = 'none';
            document.querySelector('header').style.display = 'none';
            document.querySelector('.week-navigation').style.display = 'none';
            document.querySelector('footer').style.display = 'none';
            document.querySelector('.earnings-summary').style.display = 'none';
        }
        
        // Mark as paid from receipt view
        markAsPaidBtn.addEventListener('click', () => {
            if (currentJobId) {
                markAsPaid(currentJobId);
            }
        });
        
        // Mark as unpaid from receipt view
        markAsUnpaidBtn.addEventListener('click', () => {
            if (currentJobId) {
                markAsUnpaid(currentJobId);
            }
        });
        
        // Close receipt
        function closeReceipt() {
            receipt.style.display = 'none';
            document.querySelector('.app-container').style.display = 'flex';
            document.querySelector('header').style.display = 'block';
            document.querySelector('.week-navigation').style.display = 'flex';
            document.querySelector('footer').style.display = 'block';
            document.querySelector('.earnings-summary').style.display = 'block';
        }
    </script>
</body>
</html>
